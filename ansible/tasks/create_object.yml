---
# Create objects based on input:
- name: Create objects from template - "{{ template }}"
  k8s:
    state: present
    definition: "{{ lookup('template', template) }}"

# TODO: update variable names
- name: Wait for "{{ kind }}" object pods to get into ready state
  k8s_info:
    api_version: v1
    kind: "{{ kind }}"
    name: "{{ name }}"
    namespace: "{{ namespace }}"
  register: result
  until: (result.resources[0].status.readyReplicas is defined) and (result.resources[0].status.readyReplicas == ready_status)
  delay: 15
  retries: 20
  ignore_errors: True

- name: Decide on rolling back
  set_fact:
    object_ready: "{{ (result.resources[0].status.readyReplicas is defined) and (result.resources[0].status.readyReplicas == ready_status) }}"
    is_dc: "{{ kind == 'dc' }}"

- name: Rollback Deployment Config "{{ name }}" as not successful
  command: oc -n "{{ namespace }}" rollback "{{ name }}"
  when: (not object_ready) and is_dc
  ignore_errors: True

- debug: msg="--------- Failed deployment of {{ kind }}/{{ name }}, rollback to previous version. Stop play now. ---------"
  when: not object_ready

- name: End the play for all
  meta: end_play
  when: not object_ready
